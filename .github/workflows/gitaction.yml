name: CI/CD 파이프라인

on:
  push:
    branches:
      - ci2

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 21 설정
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: gradlew 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Gradle로 빌드 (테스트 제외)
        run: ./gradlew build -x test

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v2

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 테스트
        run: |
          docker build -t my-spring-boot-app:test .
          
          # Docker 컨테이너 내에서 테스트 실행
          docker run --rm \
            -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
            -e AES_ALG=${{ secrets.AES_ALG }} \
            -e AES_KEY=${{ secrets.AES_KEY }} \
            -e MAIL_HOST=${{ secrets.MAIL_HOST }} \
            -e MAIL_PORT=${{ secrets.MAIL_PORT }} \
            -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            -e AUTHORIZATION_HEADER=${{ secrets.AUTHORIZATION_HEADER }} \
            -e REFRESHTOKEN_HEADER=${{ secrets.REFRESHTOKEN_HEADER }} \
            -e TOKEN_KEY=${{ secrets.TOKEN_KEY }} \
            -e ACCESS_TOKEN_TIME=${{ secrets.ACCESS_TOKEN_TIME }} \
            -e REFRESH_TOKEN_TIME=${{ secrets.REFRESH_TOKEN_TIME }} \
            -e ACCESS_TOKEN_NAME=${{ secrets.ACCESS_TOKEN_NAME }} \
            -e REFRESH_TOKEN_NAME=${{ secrets.REFRESH_TOKEN_NAME }} \
            -e MYSQL_SERVER=${{ secrets.MYSQL_SERVER }} \
            my-spring-boot-app:test ./gradlew test

      - name: 테스트 통과 시 Docker 이미지 푸시
        if: success()
        run: |
          docker tag my-spring-boot-app:test ${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:test
          docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:test

      - name: Docker Hub 로그아웃
        run: docker logout
